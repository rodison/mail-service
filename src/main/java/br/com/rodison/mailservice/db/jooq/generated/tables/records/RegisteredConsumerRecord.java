/*
 * This file is generated by jOOQ.
 */
package br.com.rodison.mailservice.db.jooq.generated.tables.records;


import br.com.rodison.mailservice.db.jooq.generated.tables.RegisteredConsumer;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RegisteredConsumerRecord extends UpdatableRecordImpl<RegisteredConsumerRecord> implements Record4<UUID, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.registered_consumer.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.registered_consumer.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.registered_consumer.consumer_name</code>.
     */
    public void setConsumerName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.registered_consumer.consumer_name</code>.
     */
    public String getConsumerName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.registered_consumer.date_create</code>.
     */
    public void setDateCreate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.registered_consumer.date_create</code>.
     */
    public LocalDateTime getDateCreate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.registered_consumer.date_update</code>.
     */
    public void setDateUpdate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.registered_consumer.date_update</code>.
     */
    public LocalDateTime getDateUpdate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return RegisteredConsumer.REGISTERED_CONSUMER.ID;
    }

    @Override
    public Field<String> field2() {
        return RegisteredConsumer.REGISTERED_CONSUMER.CONSUMER_NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return RegisteredConsumer.REGISTERED_CONSUMER.DATE_CREATE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return RegisteredConsumer.REGISTERED_CONSUMER.DATE_UPDATE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getConsumerName();
    }

    @Override
    public LocalDateTime component3() {
        return getDateCreate();
    }

    @Override
    public LocalDateTime component4() {
        return getDateUpdate();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getConsumerName();
    }

    @Override
    public LocalDateTime value3() {
        return getDateCreate();
    }

    @Override
    public LocalDateTime value4() {
        return getDateUpdate();
    }

    @Override
    public RegisteredConsumerRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public RegisteredConsumerRecord value2(String value) {
        setConsumerName(value);
        return this;
    }

    @Override
    public RegisteredConsumerRecord value3(LocalDateTime value) {
        setDateCreate(value);
        return this;
    }

    @Override
    public RegisteredConsumerRecord value4(LocalDateTime value) {
        setDateUpdate(value);
        return this;
    }

    @Override
    public RegisteredConsumerRecord values(UUID value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RegisteredConsumerRecord
     */
    public RegisteredConsumerRecord() {
        super(RegisteredConsumer.REGISTERED_CONSUMER);
    }

    /**
     * Create a detached, initialised RegisteredConsumerRecord
     */
    public RegisteredConsumerRecord(UUID id, String consumerName, LocalDateTime dateCreate, LocalDateTime dateUpdate) {
        super(RegisteredConsumer.REGISTERED_CONSUMER);

        setId(id);
        setConsumerName(consumerName);
        setDateCreate(dateCreate);
        setDateUpdate(dateUpdate);
    }
}
